"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
import os

env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
def load_env_file():
    env_path = BASE_DIR / '.env'
    if env_path.exists():
        with open(env_path, 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    os.environ.setdefault(key.strip(), value.strip())

load_env_file()

# Detect environment
IS_PRODUCTION = os.environ.get('DJANGO_ENV') == 'production' or os.environ.get('PRODUCTION') == 'true'
IS_LIGHTSAIL = os.environ.get('LIGHTSAIL') == 'true'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = not IS_PRODUCTION

# CSRF Configuration for Production
if IS_PRODUCTION:
    CSRF_COOKIE_SECURE = False  # Set to False for HTTP, True for HTTPS
    CSRF_COOKIE_HTTPONLY = False  # Allow JavaScript access to CSRF token
    CSRF_USE_SESSIONS = False
    CSRF_COOKIE_SAMESITE = 'Lax'
    CSRF_COOKIE_DOMAIN = None
    CSRF_COOKIE_PATH = '/'
    CSRF_TRUSTED_ORIGINS = [
        "http://52.47.162.66",
        "https://52.47.162.66", 
        "http://2a05:d012:18a:1600:539:6792:3ed7:c389",
        "https://2a05:d012:18a:1600:539:6792:3ed7:c389",
    ]
else:
    CSRF_COOKIE_SECURE = False
    CSRF_COOKIE_HTTPONLY = False  # Allow JavaScript access in development too
    CSRF_USE_SESSIONS = False
    CSRF_COOKIE_SAMESITE = 'Lax'

# Host settings based on environment
if IS_PRODUCTION:
    ALLOWED_HOSTS = [
        "52.47.162.66",
        "2a05:d012:18a:1600:539:6792:3ed7:c389",
        "localhost",
        "127.0.0.1",
    ]
else:
    ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'django_filters',
    'portfolio',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'portfolio.middleware.ImageServingMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Database configuration - uses environment variables with appropriate defaults
DATABASES = {
    'default': {
        'ENGINE': os.environ.get('DB_ENGINE', 'django.db.backends.postgresql'),
        'NAME': os.environ.get('DB_NAME', 'alex_designs_dev' if not IS_PRODUCTION else 'alex_designs'),
        'USER': os.environ.get('DB_USER', 'postgres' if not IS_PRODUCTION else 'alex_designs'),
        'PASSWORD': os.environ.get('DB_PASSWORD', 'admin' if not IS_PRODUCTION else ''),
        'HOST': os.environ.get('DB_HOST', '127.0.0.1'),
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# Media files configuration
MEDIA_URL = '/media/'

if IS_PRODUCTION:
    # Production: Use absolute paths for Ubuntu server
    MEDIA_ROOT = '/home/ubuntu/alex-design/backend/media'
    STATIC_ROOT = '/home/ubuntu/alex-design/backend/staticfiles'
else:
    # Development: Use relative paths
    MEDIA_ROOT = BASE_DIR / 'media'
    STATIC_ROOT = BASE_DIR / 'staticfiles'

# Additional static files directories (currently none needed)
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]

# File upload settings for large architecture images - Production Optimized
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB - increased from 2.5MB for better performance
DATA_UPLOAD_MAX_MEMORY_SIZE = 50 * 1024 * 1024   # 50MB - increased from 10MB for large album uploads
DATA_UPLOAD_MAX_NUMBER_FIELDS = 5000  # Allow many album images
ALLOWED_UPLOAD_EXTENSIONS = [
    'jpg', 'jpeg', 'png', 'gif', 'bmp', 'tiff', 'tif', 'webp',
    'JPG', 'JPEG', 'PNG', 'GIF', 'BMP', 'TIFF', 'TIF', 'WEBP',
    'heic', 'heif', 'HEIC', 'HEIF'  # Apple formats
]

# Django admin specific settings
ADMIN_MEDIA_PREFIX = '/static/admin/'

# File upload settings optimized for production performance
if IS_PRODUCTION:
    FILE_UPLOAD_TEMP_DIR = '/tmp'
    FILE_UPLOAD_PERMISSIONS = 0o644
    FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755
    
    # Optimized file upload handlers for production - stream to disk for better performance
    FILE_UPLOAD_HANDLERS = [
        'django.core.files.uploadhandler.TemporaryFileUploadHandler',  # Stream to disk first
        'django.core.files.uploadhandler.MemoryFileUploadHandler',     # Small files in memory
    ]
else:
    # File upload handlers for development
    FILE_UPLOAD_HANDLERS = [
        'django.core.files.uploadhandler.TemporaryFileUploadHandler',
        'django.core.files.uploadhandler.MemoryFileUploadHandler',
    ]

# Image validation settings
ALLOWED_IMAGE_TYPES = [
    'image/jpeg', 'image/jpg', 'image/png', 'image/gif', 
    'image/bmp', 'image/webp', 'image/tiff'
]
MAX_IMAGE_SIZE = 25 * 1024 * 1024  # 25MB

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'portfolio.User'

# CORS and CSRF settings based on environment
if IS_PRODUCTION:
    # Production CORS settings
    CORS_ALLOWED_ORIGINS = [
        "http://52.47.162.66",
        "http://2a05:d012:18a:1600:539:6792:3ed7:c389",
        "http://localhost:3000",
        "http://127.0.0.1:3000",
    ]
    
    # Production session settings
    SESSION_COOKIE_SECURE = False  # Set to False for HTTP, True for HTTPS
    SESSION_COOKIE_HTTPONLY = True
    SESSION_COOKIE_SAMESITE = 'Lax'
    
    # Production security settings
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    
    # Additional security headers for production
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    # SECURE_SSL_REDIRECT = True  # Uncomment when HTTPS is properly configured
else:
    # Local development CORS settings
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://localhost:5173",
        "http://127.0.0.1:5173",
        "http://localhost:8080",
        "http://127.0.0.1:8080",
        "http://localhost:8081",
        "http://127.0.0.1:8081",
    ]
    
    CSRF_TRUSTED_ORIGINS = [
        "http://52.47.95.169",
        "https://52.47.95.169"
    ]

# Common CORS settings
CORS_ALLOW_CREDENTIALS = True

# Content type settings for file uploads
if IS_PRODUCTION:
    # Allow multipart form data for file uploads
    CORS_ALLOW_HEADERS = [
        'accept',
        'accept-encoding',
        'authorization',
        'content-type',
        'dnt',
        'origin',
        'user-agent',
        'x-csrftoken',
        'x-requested-with',
    ]

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', '')
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'noreply@alexdesign.com')
CONTACT_EMAIL = os.environ.get('CONTACT_EMAIL', 'mohamedaboelhamd765@gmail.com')

# For development, use console backend to see emails in terminal
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# REST Framework settings - Production Optimized
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 12,  # Reasonable page size for image-heavy content
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '1000/hour',  # Allow reasonable API usage
        'user': '2000/hour'
    } if IS_PRODUCTION else {
        'anon': '10000/hour',  # More lenient for development
        'user': '20000/hour'
    }
}
# Generated by Django 5.2.4 on 2025-09-22 22:49

from django.db import migrations


def reset_category_ordering(apps, schema_editor):
    """
    Reset project ordering to be category-independent.
    Each category will have its own ordering starting from 1.
    """
    Project = apps.get_model('portfolio', 'Project')
    ProjectCategory = apps.get_model('portfolio', 'ProjectCategory')
    
    # Get the Architecture Design and Interior Design categories
    try:
        arch_category = ProjectCategory.objects.get(name='Architecture Design')
        interior_category = ProjectCategory.objects.get(name='Interior Design')
        
        # Reset Architecture Design projects ordering
        arch_projects = Project.objects.filter(categories=arch_category).order_by('order', '-project_date')
        for i, project in enumerate(arch_projects, 1):
            project.order = i
            project.save(update_fields=['order'])
        
        # Reset Interior Design projects ordering
        interior_projects = Project.objects.filter(categories=interior_category).order_by('order', '-project_date')
        for i, project in enumerate(interior_projects, 1):
            project.order = i
            project.save(update_fields=['order'])
        
        print(f"Reset ordering for {arch_projects.count()} Architecture Design projects")
        print(f"Reset ordering for {interior_projects.count()} Interior Design projects")
        
    except ProjectCategory.DoesNotExist:
        print("Categories not found - skipping ordering reset")


def reverse_reset_category_ordering(apps, schema_editor):
    """
    Reverse migration - restore global ordering (not critical since this is an improvement)
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('portfolio', '0028_add_original_file_path'),
    ]

    operations = [
        migrations.RunPython(reset_category_ordering, reverse_reset_category_ordering),
    ]
